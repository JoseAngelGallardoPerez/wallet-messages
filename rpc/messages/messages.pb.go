// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/messages/messages.proto

package messages

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendMessageReq struct {
	RecipientId            string   `protobuf:"bytes,1,opt,name=recipientId,proto3" json:"recipientId,omitempty"`
	SenderId               string   `protobuf:"bytes,2,opt,name=senderId,proto3" json:"senderId,omitempty"`
	Subject                string   `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Message                string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	DeleteAfterRead        bool     `protobuf:"varint,5,opt,name=deleteAfterRead,proto3" json:"deleteAfterRead,omitempty"`
	DoNotDuplicateIfExists bool     `protobuf:"varint,6,opt,name=doNotDuplicateIfExists,proto3" json:"doNotDuplicateIfExists,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *SendMessageReq) Reset()         { *m = SendMessageReq{} }
func (m *SendMessageReq) String() string { return proto.CompactTextString(m) }
func (*SendMessageReq) ProtoMessage()    {}
func (*SendMessageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_338c6b79a15aef77, []int{0}
}

func (m *SendMessageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageReq.Unmarshal(m, b)
}
func (m *SendMessageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageReq.Marshal(b, m, deterministic)
}
func (m *SendMessageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageReq.Merge(m, src)
}
func (m *SendMessageReq) XXX_Size() int {
	return xxx_messageInfo_SendMessageReq.Size(m)
}
func (m *SendMessageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageReq proto.InternalMessageInfo

func (m *SendMessageReq) GetRecipientId() string {
	if m != nil {
		return m.RecipientId
	}
	return ""
}

func (m *SendMessageReq) GetSenderId() string {
	if m != nil {
		return m.SenderId
	}
	return ""
}

func (m *SendMessageReq) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *SendMessageReq) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *SendMessageReq) GetDeleteAfterRead() bool {
	if m != nil {
		return m.DeleteAfterRead
	}
	return false
}

func (m *SendMessageReq) GetDoNotDuplicateIfExists() bool {
	if m != nil {
		return m.DoNotDuplicateIfExists
	}
	return false
}

type MessageResp struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RecipientId          string   `protobuf:"bytes,2,opt,name=recipientId,proto3" json:"recipientId,omitempty"`
	SenderId             string   `protobuf:"bytes,3,opt,name=senderId,proto3" json:"senderId,omitempty"`
	Subject              string   `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Message              string   `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageResp) Reset()         { *m = MessageResp{} }
func (m *MessageResp) String() string { return proto.CompactTextString(m) }
func (*MessageResp) ProtoMessage()    {}
func (*MessageResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_338c6b79a15aef77, []int{1}
}

func (m *MessageResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageResp.Unmarshal(m, b)
}
func (m *MessageResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageResp.Marshal(b, m, deterministic)
}
func (m *MessageResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageResp.Merge(m, src)
}
func (m *MessageResp) XXX_Size() int {
	return xxx_messageInfo_MessageResp.Size(m)
}
func (m *MessageResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageResp.DiscardUnknown(m)
}

var xxx_messageInfo_MessageResp proto.InternalMessageInfo

func (m *MessageResp) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MessageResp) GetRecipientId() string {
	if m != nil {
		return m.RecipientId
	}
	return ""
}

func (m *MessageResp) GetSenderId() string {
	if m != nil {
		return m.SenderId
	}
	return ""
}

func (m *MessageResp) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *MessageResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*SendMessageReq)(nil), "velmie.wallet.messages.SendMessageReq")
	proto.RegisterType((*MessageResp)(nil), "velmie.wallet.messages.MessageResp")
}

func init() {
	proto.RegisterFile("rpc/messages/messages.proto", fileDescriptor_338c6b79a15aef77)
}

var fileDescriptor_338c6b79a15aef77 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x92, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0x87, 0x95, 0x34, 0x2d, 0xe1, 0x22, 0x8a, 0xe4, 0xa1, 0xb2, 0xca, 0x52, 0x15, 0x09, 0x75,
	0x32, 0x12, 0x48, 0xec, 0x20, 0x18, 0x3a, 0xc0, 0xe0, 0x6e, 0xdd, 0xd2, 0xf8, 0x8a, 0x0c, 0x69,
	0x63, 0x6c, 0x17, 0x78, 0x0b, 0x5e, 0x92, 0x07, 0xc1, 0x38, 0x7f, 0x94, 0x56, 0x84, 0xcd, 0xf7,
	0xfb, 0x7c, 0xc9, 0x7d, 0x3a, 0xc3, 0x99, 0x56, 0xd9, 0xe5, 0x06, 0x8d, 0x49, 0x9f, 0xd1, 0x34,
	0x07, 0xa6, 0x74, 0x61, 0x0b, 0x32, 0x7a, 0xc7, 0x7c, 0x23, 0x91, 0x7d, 0xa4, 0x79, 0x8e, 0x96,
	0xd5, 0x74, 0xfa, 0x1d, 0xc0, 0x70, 0x81, 0x5b, 0xf1, 0x58, 0x06, 0x1c, 0xdf, 0xc8, 0x04, 0x12,
	0x8d, 0x99, 0x54, 0x12, 0xb7, 0x76, 0x2e, 0x68, 0x30, 0x09, 0x66, 0xc7, 0xbc, 0x1d, 0x91, 0x31,
	0xc4, 0xc6, 0xf5, 0xa0, 0x76, 0x38, 0xf4, 0xb8, 0xa9, 0x09, 0x85, 0x23, 0xb3, 0x5b, 0xbd, 0x60,
	0x66, 0x69, 0xcf, 0xa3, 0xba, 0xfc, 0x25, 0xd5, 0x6f, 0x69, 0x54, 0x92, 0xaa, 0x24, 0x33, 0x38,
	0x15, 0xe8, 0xc6, 0xc2, 0xdb, 0xb5, 0x45, 0xcd, 0x31, 0x15, 0xb4, 0xef, 0x6e, 0xc4, 0xfc, 0x30,
	0x26, 0x37, 0x30, 0x12, 0xc5, 0x53, 0x61, 0xef, 0x77, 0x2a, 0x97, 0x59, 0x6a, 0x71, 0xbe, 0x7e,
	0xf8, 0x94, 0xc6, 0x1a, 0x3a, 0xf0, 0x0d, 0x1d, 0x74, 0xfa, 0x15, 0x40, 0xd2, 0x28, 0x1a, 0x45,
	0x86, 0x10, 0xca, 0x52, 0x2d, 0xe2, 0xee, 0x74, 0xe8, 0x1c, 0xfe, 0xef, 0xdc, 0xeb, 0x76, 0x8e,
	0x3a, 0x9d, 0xfb, 0x7b, 0xce, 0x57, 0xaf, 0x70, 0x52, 0x0d, 0xb4, 0xf0, 0x9f, 0x21, 0x4b, 0x48,
	0x5a, 0x8b, 0x20, 0x17, 0xec, 0xef, 0x8d, 0xb1, 0xfd, 0x6d, 0x8d, 0xcf, 0xbb, 0xee, 0xb5, 0x74,
	0xef, 0x60, 0x19, 0xd7, 0xf9, 0x6a, 0xe0, 0x1f, 0xc4, 0xf5, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xe9, 0x1d, 0x10, 0x66, 0x2f, 0x02, 0x00, 0x00,
}
